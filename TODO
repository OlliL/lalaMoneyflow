
1. implement moduleMonthlySettlements
2. implement moduleSearch
3. implement remaining moduleMoneyFlows (trend-graph)

4. implement Logout Call to destroy the session on the server.

5. continue removing Core Classes
   - move all the remaining "service" Controller forward methods to client based / view based controller methods to reduce
     multiple HTTP calls and to live the "Controller way" which is a client depending interface
   - implement REST/JSON Services + use them
   - move calc_amount to the client (for the time being, the personal Currency handling is broken)
   - think about language handling - it is no longer DB backed but cache backed in files
   - maybe extra Validator Classes with insert/update/delete relevant validations and not in the Service
   - centralize all cachenames

###########################################################################################################################

Bugs detected so far:
   - predefmoneyflows: edit moneyflow with out-of-daterange capitalsource - do not allow to save it!
   - when a new month start and after the login the settlement question is raised - the new window should open in the
     correct size (height = NUM_SOURCES * 35+something)
   - moneyflows for capitalsources which are not allowed for the user must not be possible (verify this with RESTClient,
     the Client does not allow it already)
   - check if the deletion of a PreDefMoneyflow was successful and if not post an error message and send a propper response object.
   - same goes for Capitalsources and Contractpartner

     

- evaluate:
  - switch from data being bound to user-ids to data being bound to accounts and users being allowed to work with accounts
    so for example having one acount "Family Doe" with 2 Users "John" and "Marry" able to work with the "Family Doe" account.
    Contract Partner, Capital Sources, Money Flows, and so on are then linked to "Family Doe" instead of single users. Beside
    that, they can also be defined privatly. Some sort of hirarchical concepts. "Group", and "User" data.  
  - Doctrine + Serializer
  - PHPUnit
    -> PHP_CodeCoverage needed
    -> Xdebug needed (drops performance heavily)
    ---> not sure if OK



some far time in the future:
666. Redo the Webclient MVC like


###########################################################################################################################


old (but still valid) TODOs:

  
- create group-mantainance screens 

  - add user to group(s)
  - remove user from group(s)
    -> in the Users view. When adding or editing user, show two List-of value
       boxes. One on the right of the groups where the user is assigned to, and
       on the left a box with the groups where the user is not assigned to. Make
       butons to move a group from left to right and vice versa.

  +--------------------------------------------------------+
  |                                                        |
  |     User Groups                     All Groups         |
  |    +---------------+              +---------------+    |
  |    | test1         |              | test3         |    |
  |    |               |              | test4         |    |
  |    |               |              |               |    |
  |    |               |     [<<]     |               |    |
  |    |               |              |               |    |
  |    |               |     [>>]     |               |    |
  |    |               |              |               |    |
  |    |               |              |               |    |
  |    |               |              |               |    |
  |    |               |              |               |    |
  |    +---------------+              +---------------+    |
  |                                                        |
  |    [Save]                                  [Cancel]    |
  |                                                        |
  +--------------------------------------------------------+

- put the available countries into the db and have them selectable when
  handling contractual partners instead of having it free editable

- what has to happen to monthlysettlements.movement_calulated if a new
  currency rate gets valid for the currency the users has chosen to
  display but is different from the currency rate which is stored in
  the DB
    -> field must be recalculated?
    -> why is the shown field saved not the field in the DB currency? is this
       is really the case?
