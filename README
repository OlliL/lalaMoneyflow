Setting up Eclipse:

- download Eclipse Keppler
- "Help" -> "Install new Software..." "PHP Development Toolkit (PDT)" Location: http://download.eclipse.org/tools/pdt/updates/3.2-nightly
- New "PHP Project" -> (x) "Create Project at existing location"
- "Team" -> "CVS" -> [Files and Folders] => ( ) "Convert Text files to use platform ending"
- "General" -> "Workspace" -> "New Text file line delimiter" [Unix]
- "General" -> "Editors" -> "Text Editors" -> "Displayed tab width" -> 8
- "PHP" -> "Editor" -> "Save Actions" -> [x] "Remove Trailing Whitespaces"



Requirements:
- Apache 2.2
	- with "AllowOverride FileInfo" for the moneyflow directory

- MySQL 5.1 or higher
	
- PHP 5.5.x
	- Extension: session
	- Extension: hash
	- Extension: xml
	- Extension: curl
	- Extension: PDO_MYSQL
	- Extension: json
	- Extension: mbstring
	- Extension: ctype
	- Extension: gd (for jpgraph)

?	- Extension: libxml
?	- Extension: ? I guess I forgot some.....

- Caching:
	- Yac (https://github.com/laruence/yac/)
	- PECL Extension msgpack
	  OR
	- memcached Server + PECL Extension memcached
	- optional: PECL igbinary Extension for faster access
	- consider configuring memcached to use Unix sockets for better performance
	  OR
	- redis Server + PECL Extension redis
	- optional: PECL igbinary Extension for faster access
	- consider configuring redis to use Unix sockets for better performance

- Smarty 3.x (http://www.smarty.net/)

- JpGraph 3.x (http://jpgraph.net/)

?- PECL spl_types



Installation:
- create a MySQL DB
	e.g.		create database moneyflow;
- create a MySQL user to be used by moneyflow (SELECT, INSERT, UPDATE, DELETE privileges are sufficient)
	e.g.		GRANT SELECT,INSERT,UPDATE,DELETE ON moneyflow.* TO moneyflow@localhost IDENTIFIED BY 'moneyflow' WITH GRANT OPTION; 
- edit server/include.php and client/include.php
  - change DATASOURCE
  - change ROOTDIR
  ( - change URL )
  ( - set APPID to a unique number If you run multiple installations, it has to be always a different number! unique!! )
- execute mysqldump.sql
	mysql -u root -p<password> -h <dbhost> <dbname> < client/mysqldump.sql
- execute mysqlext.sql
	mysql -u root -p<password> -h <dbhost> <dbname> < client/mysqlext.sql
- make sure the following directories and files are writable by apache-user (probably 'www'):
	rest/client/locale
	rest/client/locale/*.conf
	rest/client/templates_c
	rest/client/cache
- log in as admin (password admin)
- change the password
- create a new group
- create a new user, assign the user to the new group
- create capitalsources
- create contractpartner
- create postingt accounts (your user needs to have the right "admin")





To run the PHPUnit Tests in server/
- install PHP DOM Extension
- then:
	- cd server
	- ../contrib/phpunit.phar tests